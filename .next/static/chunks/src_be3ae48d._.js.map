{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/hooks/useAuth.ts"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, createContext, useContext, ReactNode } from 'react';\nimport { User, LoginData, ApiResponse } from '@/types';\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  isLoading: boolean;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check for existing session on mount\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      if (!token) {\n        setIsLoading(false);\n        return;\n      }\n\n      const response = await fetch('/api/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        const data: ApiResponse<User> = await response.json();\n        if (data.success && data.data) {\n          setUser(data.data);\n        } else {\n          localStorage.removeItem('auth_token');\n        }\n      } else {\n        localStorage.removeItem('auth_token');\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      localStorage.removeItem('auth_token');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const login = async (email: string, password: string): Promise<boolean> => {\n    try {\n      setIsLoading(true);\n      \n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data: ApiResponse<{ user: User; token: string }> = await response.json();\n\n      if (data.success && data.data) {\n        localStorage.setItem('auth_token', data.data.token);\n        setUser(data.data.user);\n        \n        // Log the login action\n        await logAuditAction('login', 'users', data.data.user.id, {\n          email: data.data.user.email,\n          role: data.data.user.role\n        });\n        \n        return true;\n      } else {\n        console.error('Login failed:', data.error);\n        return false;\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      if (user) {\n        // Log the logout action\n        await logAuditAction('logout', 'users', user.id, {\n          email: user.email\n        });\n      }\n\n      localStorage.removeItem('auth_token');\n      setUser(null);\n      \n      // Call logout endpoint to invalidate token on server\n      await fetch('/api/auth/logout', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        }\n      });\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  const logAuditAction = async (actionType: string, tableName: string, recordId: number, data: any) => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      if (!token) return;\n\n      await fetch('/api/audit/log', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          actionType,\n          tableName,\n          recordId,\n          newValues: data,\n          description: `User ${actionType}: ${data.email}`\n        })\n      });\n    } catch (error) {\n      console.error('Audit logging failed:', error);\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    login,\n    logout,\n    isLoading,\n    isAuthenticated: !!user,\n  };\n\n  return React.createElement(AuthContext.Provider, { value }, children);\n}\n\nexport function useAuth(): AuthContextType {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n\n// Custom hook for protected routes\nexport function useRequireAuth() {\n  const { user, isLoading } = useAuth();\n  \n  useEffect(() => {\n    if (!isLoading && !user) {\n      window.location.href = '/login';\n    }\n  }, [user, isLoading]);\n\n  return { user, isLoading };\n}\n\n// Custom hook for role-based access\nexport function useRequireRole(requiredRole: User['role'] | User['role'][]) {\n  const { user, isLoading } = useAuth();\n  \n  const hasRequiredRole = () => {\n    if (!user) return false;\n    \n    if (Array.isArray(requiredRole)) {\n      return requiredRole.includes(user.role);\n    }\n    \n    return user.role === requiredRole;\n  };\n\n  useEffect(() => {\n    if (!isLoading && (!user || !hasRequiredRole())) {\n      window.location.href = '/unauthorized';\n    }\n  }, [user, isLoading, requiredRole]);\n\n  return { user, isLoading, hasAccess: hasRequiredRole() };\n}\n\n// Utility function to get auth headers\nexport function getAuthHeaders(): HeadersInit {\n  const token = localStorage.getItem('auth_token');\n  return {\n    'Content-Type': 'application/json',\n    ...(token && { 'Authorization': `Bearer ${token}` })\n  };\n}\n\n// Utility function for authenticated API calls\nexport async function authenticatedFetch(url: string, options: RequestInit = {}): Promise<Response> {\n  const token = localStorage.getItem('auth_token');\n  \n  const headers = {\n    'Content-Type': 'application/json',\n    ...options.headers,\n    ...(token && { 'Authorization': `Bearer ${token}` })\n  };\n\n  const response = await fetch(url, {\n    ...options,\n    headers\n  });\n\n  // If unauthorized, redirect to login\n  if (response.status === 401) {\n    localStorage.removeItem('auth_token');\n    window.location.href = '/login';\n  }\n\n  return response;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/sonner.tsx"],"sourcesContent":["\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner, ToasterProps } from \"sonner\"\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      style={\n        {\n          \"--normal-bg\": \"var(--popover)\",\n          \"--normal-text\": \"var(--popover-foreground)\",\n          \"--normal-border\": \"var(--border)\",\n        } as React.CSSProperties\n      }\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IAEpC,qBACE,6LAAC,2IAAA,CAAA,UAAM;QACL,OAAO;QACP,WAAU;QACV,OACE;YACE,eAAe;YACf,iBAAiB;YACjB,mBAAmB;QACrB;QAED,GAAG,KAAK;;;;;;AAGf;GAjBM;;QACyB,mJAAA,CAAA,WAAQ;;;KADjC","debugId":null}}]
}